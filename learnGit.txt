初学GitHub，在网上找到廖雪峰的Git教程，相当的不错，号称史上最浅显易懂的Git教程，果然名不虚传。此文档内容主要是本人对该教程学习的学习笔记，有助于更好的掌握和查阅Git重点。

  1.Git是世界上最先进的分布式版本控制系统（没有之一）。
  2.集中式VS分布式：CVS、VSS及SVN是集中式的版本控制系统，版本库是集中存放在中央服务器，必须联网才能工作，不好。Git是分布式的版本控制系统，没有中央服务器，各自电脑上有完整的版本库，只需把各自的修改推送给对方即可，通常也有一台充当“中央服务器”的电脑，当它的作用知识方便交换大家的修改，没有它，只是交换不方便而已。
  3.Linux安装Git：输入git，测试系统有没有安装Git，如果没有安装，输入sudo apt-get install git即可完成安装（老一点的ubuntu，需要输入sudo apt-get install git-core，因为老版本中Git是另外一个软件，所以只能叫git-core，后来Git名气大了，就把这个git名字夺过来了）。
安装完成后，需要最后一步为电脑设置用户名和Email地址用于分布式的自报家门
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
  4.创建版本库：版本库又名仓库，英文名repository，可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪。
mkdir命令用于创建目录
pwd命令用于显示当前目录路径
git init命令把当前目录变成Git可以管理的仓库（该命令后，会在当前目录下多一个.git的隐藏目录，这个目录就是Git用来跟踪管理版本库的），初始化一个Git仓库。
把一个文件放到Git仓库只需要两步：
（1）用git add <file>命令，把文件添加到仓库，注意可反复多次使用，添加多个文件。
（2）用git commit把文件提交到仓库。该命令-m选项可输入本次提交的说明，在历史记录中方便找到改动记录。
  5.远程仓库：Git是分布式版本控制系统，同一个Git仓库，可以分布到不同的机器上，最早，肯定只有一台机器有一个原始版本库，此后，别的机器可以“克隆”这个原始版本库，而且每台机器的版本库其实都是一样的，并没有主次之分。实际上可以找一台电脑充当中央服务器的角色，每天24小时开机，其他每人从这个服务器仓库克隆一份到自己的电脑，并且各自把各自的提交推送到服务器仓库，也从服务器仓库中拉取别人的提交。GitHub这个神奇的网站就是提供了Git仓库托管服务的那个超级中央服务器。自行注册GitHub帐号。“有了远程仓库，妈妈再也不用担心我的硬盘了。”——Git点读机
本地Git仓库和GitHub仓库之间传输是通过SSH加密，所以需要设置SSH Key：
（1）创建SSH KEY，输入下面命令后，然后一路回车，使用默认值即可。在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的密钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
$ ssh-keygen -t rsa -C "youremail@example.com"
（2）登陆GitHub，打开“Account settings”，“SSH Keys”页面，然后点击“Add SSH Key”，填上任意Title，在Key文本框里粘帖id_rsa.pub文件的内容。
Git支持SSH协议，所以GitHub只要知道了你的公钥，就可以确认只有你自己才能推送，GitHub允许你添加多个Key，你可以把公司、家里的电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。
  6.添加远程库：已经在本地创建了一个Git仓库后，然后想在GitHub创建一个Git仓库，让这两个仓库进行远程同步。
（1）登陆GitHub，点击“Create a new repo”按钮，创建一个GitHub仓库，该仓库是空的，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后把本地仓库内容推送到GitHub仓库。
$ git remote add origin git@server-name:path/repo-name.git命令来关联一个GitHub远程库，远程库的名字就是origin，Git默认的叫法。
（2）把本地仓库的所有内容推送到GitHub远程库上，用git push命令。由于远程库是空的，第一次推送master分支，加上-u参数，Git不但会把本地的master分支内容推送到远程的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
$ git push -u origin master（第一次） / $ git push origin master（简化命令）
SSH警告：第一次使用clone/push命令连接GitHub时，会得到一个警告，是SSH连接在第一次验证GitHub服务器的key时，需要输入yes来确认是来自GitHub的连接，并加入本机的一个信任列表里。
  7.从GitHub远程库克隆：本地没有仓库，先创建GitHub的远程库，然后从远程库克隆到本地仓库。多人协作开发，每人各自从GitHub远程库克隆一份就可以了。
（1）登陆GitHub，创建一个新的仓库，该仓库自动创建README.md文件用于测试。
（2）用git clone命令克隆一个本地仓库，Git默认用SSh协议，也可以使用https等协议。
$ git clone git@server-name:path/repo-name.git
克隆远程库的时候，所使用的远程主机自动被Git命名为origin，然后用git push、git pull、git fetch命令推送、获取更新。



